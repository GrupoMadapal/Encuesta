<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="LineItem"
xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
  <alias>
    <typeAlias alias="CostosXEmployee" type="Poleo.Objects.CostosXEmployee" />
    <typeAlias alias="OrdenesFinderr" type="Poleo.Objects.OrdenesFinder" />
  </alias>


  <statements>

    <select id="SelectCostXEm1st" paramClass="OrdenesFinderr" resultClass="CostosXEmployee">

      SELECT SUM (OrderIdealFoodCost) AS OrderIdealFoodCost, SUM (OrderRoyaltySales) AS OrderRoyaltySales, Count(*) AS TotalOrdenes,
      O.Added_By, O.Location_Code, E.Last_Name + ' ' + E.First_Name +' '+  E.Middle_Name AS FullName,
      CASE WHEN ( O.Added_By ) ='Power' THEN 'OLO' END AS FullName2
      FROM OrdersPOS O
      LEFT JOIN EmployeePOS E ON O.Added_By = E.Employee_Code
      LEFT JOIN Tiendas T ON O.Location_Code = T.Number_tienda
      WHERE Order_Date = #Order_Date# AND Actual_Order_Date Between #Order_Date#+'10:00:00' AND #Order_Date#+'12:59:59'
        <isNotEmpty prepend="AND" property="Empleado" >
            O.Added_By = #Empleado#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="NumTienda" >
            O.Location_Code = #NumTienda#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="UbicacionTienda" >
          T.Ubicacion = #UbicacionTienda#
        </isNotEmpty>      
      GROUP BY O.Added_By, E.Last_Name, E.First_Name, E.Middle_Name, O.Location_Code, T.Ubicacion, T.Nombre_tienda
      ORDER BY T.Ubicacion, T.Nombre_tienda
    </select>

    <select id="SelectCostXEm2nd" paramClass="OrdenesFinderr" resultClass="CostosXEmployee">

      SELECT SUM (OrderIdealFoodCost) AS OrderIdealFoodCost, SUM (OrderRoyaltySales) AS OrderRoyaltySales, Count(*) AS TotalOrdenes,
      O.Added_By, O.Location_Code, E.Last_Name + ' ' + E.First_Name +' '+  E.Middle_Name AS FullName,
      CASE WHEN ( O.Added_By ) ='Power' THEN 'OLO' END AS FullName2
      FROM OrdersPOS O
      LEFT JOIN EmployeePOS E ON O.Added_By = E.Employee_Code
      LEFT JOIN Tiendas T ON O.Location_Code = T.Number_tienda
      WHERE Order_Date = #Order_Date# AND Actual_Order_Date Between #Order_Date#+'13:00:00' AND #Order_Date#+'17:59:59'
      <isNotEmpty prepend="AND" property="Empleado" >
        O.Added_By = #Empleado#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="NumTienda" >
        O.Location_Code = #NumTienda#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="UbicacionTienda" >
        T.Ubicacion = #UbicacionTienda#
      </isNotEmpty>
      GROUP BY O.Added_By, E.Last_Name, E.First_Name, E.Middle_Name, O.Location_Code, T.Ubicacion, T.Nombre_tienda
      ORDER BY T.Ubicacion, T.Nombre_tienda
    </select>

    <select id="SelectCostXEm3rd" paramClass="OrdenesFinderr" resultClass="CostosXEmployee">

      SELECT SUM (OrderIdealFoodCost) AS OrderIdealFoodCost, SUM (OrderRoyaltySales) AS OrderRoyaltySales, Count(*) AS TotalOrdenes,
      O.Added_By, O.Location_Code, E.Last_Name + ' ' + E.First_Name +' '+  E.Middle_Name AS FullName,
      CASE WHEN ( O.Added_By ) ='Power' THEN 'OLO' END AS FullName2
      FROM OrdersPOS O
      LEFT JOIN EmployeePOS E ON O.Added_By = E.Employee_Code
      LEFT JOIN Tiendas T ON O.Location_Code = T.Number_tienda
      WHERE Order_Date = #Order_Date# AND Actual_Order_Date Between #Order_Date#+'18:00:00' AND #Order_Date#+'23:59:59'
      <isNotEmpty prepend="AND" property="Empleado" >
        O.Added_By = #Empleado#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="NumTienda" >
        O.Location_Code = #NumTienda#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="UbicacionTienda" >
        T.Ubicacion = #UbicacionTienda#
      </isNotEmpty>
      GROUP BY O.Added_By, E.Last_Name, E.First_Name, E.Middle_Name, O.Location_Code, T.Ubicacion, T.Nombre_tienda
      ORDER BY T.Ubicacion, T.Nombre_tienda
    </select>

    <select id="SelectCostXStore" paramClass="OrdenesFinderr" resultClass="CostosXEmployee">

      SELECT SUM (OrderIdealFoodCost) AS OrderIdealFoodCost, SUM (OrderRoyaltySales) AS OrderRoyaltySales, Count(*) AS TotalOrdenes,
      SUM (OrderIdealFoodCost) / SUM (OrderRoyaltySales) AS COSTO
      FROM OrdersPOS O
      LEFT JOIN Tiendas T ON O.Location_Code = T.Number_tienda
      WHERE Order_Date = #Order_Date#
        <isNotEmpty prepend="AND" property="NumTienda" >
          O.Location_Code = #NumTienda#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="UbicacionTienda" >
          T.Ubicacion = #UbicacionTienda#
        </isNotEmpty>

    </select>

    <select id="SelectEmployeesXStore" paramClass="OrdenesFinderr" resultClass="CostosXEmployee">
      Select Distinct Added_By AS Empleado
      From OrdersPOS O 
      LEFT JOIN Tiendas T ON O.Location_Code = T.Number_tienda
      WHERE Order_Date = #Order_Date#
      <isNotEmpty prepend="AND" property="NumTienda" >
              Location_Code = #NumTienda#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="UbicacionTienda" >
              T.Ubicacion = #UbicacionTienda#
        </isNotEmpty>
    </select>

    <select id="SelectEmployeesXStore2" paramClass="OrdenesFinderr" resultClass="CostosXEmployee">
      Select Distinct Added_By AS Empleado
      From OrdersDump WHERE Location_Code = #NumTienda#
      <isNotEmpty prepend="AND" property="DateIni2" >
        Order_Date BETWEEN #DateIni2# AND #DateEnd2#
      </isNotEmpty>
    </select>
    

    <select id="SelectCostXEmBD" paramClass="OrdenesFinderr" resultClass="CostosXEmployee">
      DECLARE @tblOrdersDump TABLE
      (
      OrderIdealFoodCost MONEY,
      OrderRoyaltySales MONEY,
      TotalOrdenes int,
      Added_By VARCHAR(5),
      Location_Code Nvarchar(5),
      FullName VARCHAR(40),
      FullName2 VARCHAR(3)
      )
      INSERT @tblOrdersDump

      SELECT
      SUM (OrderIdealFoodCost) AS OrderIdealFoodCost, SUM (OrderRoyaltySales) AS OrderRoyaltySales, Count(*) AS TotalOrdenes,
      O.Added_By, O.Location_Code,
      E.Last_Name + ' ' + E.First_Name +' '+  E.Middle_Name AS FullName,
      CASE WHEN ( O.Added_By ) ='Power' THEN 'OLO' END AS FullName2
      FROM OrdersDump O
      LEFT JOIN EmployeePOS E ON O.Added_By = E.Employee_Code AND O.Location_Code = E.Location_Code
      LEFT JOIN Tiendas T ON O.Location_Code = T.Number_tienda
      WHERE Order_Date BETWEEN #DateIni2# AND #DateEnd2# AND Order_Status_Code = '4'
      <isNotEmpty prepend="AND" property="Empleado" >
        O.Added_By = #Empleado#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="NumTienda" >
        O.Location_Code = #NumTienda#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="UbicacionTienda" >
        T.Ubicacion = #UbicacionTienda#
      </isNotEmpty>


      GROUP BY O.Added_By, O.Location_Code, E.Last_Name, E.First_Name, E.Middle_Name, T.Ubicacion, T.Nombre_tienda
      ORDER BY T.Ubicacion, T.Nombre_tienda

      SELECT * FROM  @tblOrdersDump
    </select>

    <select id="SelectDeliveryOrdersXEmToday" paramClass="OrdenesFinderr" resultClass="CostosXEmployee">
      SELECT O.location_code AS Location_Code, O.Driver_ID AS Added_By,
      E.First_Name+' '+E.Last_Name AS FullName,
      COUNT(O.Order_Number) AS TotalOrdenes, (SUM(O.OrderDeliveryTimeSecs)/COUNT(O.Order_Number))/60 AS TiempoPromedioMinutes,
      SUM( DATEDIFF(MINUTE , O.Route_Time , O.Return_Time ))/COUNT(O.Order_Number)  AS TiempoPromedioDeCorrida
      FROM OrdersPOS O
      INNER JOIN EmployeePOS E ON O.Location_Code = E.Location_Code AND O.Driver_ID = E.Employee_Code
      LEFT JOIN Tiendas T ON O.Location_Code = T.Number_tienda
      WHERE Order_Date = #Order_Date#  AND Order_Type_Code = 'D' and O.Order_Status_Code='4'
      <isNotEmpty prepend="AND" property="Empleado" >
        O.Added_By = #Empleado#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="NumTienda" >
        O.Location_Code = #NumTienda#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="UbicacionTienda" >
        T.Ubicacion = #UbicacionTienda#
      </isNotEmpty>
      GROUP BY O.Driver_ID, O.Location_Code, E.First_Name, E.Last_Name, T.Ubicacion, T.Nombre_tienda
      ORDER BY T.Ubicacion, T.Nombre_tienda
    </select>

    <select id="SelectDeliveryOrdersXEmBD" paramClass="OrdenesFinderr" resultClass="CostosXEmployee">
      SELECT O.Location_Code AS Location_Code, O.Driver_ID AS Added_By,
      E.First_Name+' '+E.Last_Name AS FullName,
      COUNT(O.Order_Number) AS TotalOrdenes, (SUM(O.OrderDeliveryTimeSecs)/COUNT(O.Order_Number))/60 AS TiempoPromedioMinutes,
      SUM( DATEDIFF(MINUTE , O.Route_Time , O.Return_Time ))/COUNT(O.Order_Number)  AS TiempoPromedioDeCorrida
      FROM OrdersDump O
      INNER JOIN EmployeePOS E ON O.Location_Code = E.Location_Code AND O.Driver_ID = E.Employee_Code
      LEFT JOIN Tiendas T ON O.Location_Code = T.Number_tienda
      WHERE Order_Date BETWEEN #DateIni2# AND #DateEnd2#  AND Order_Type_Code = 'D' and O.Order_Status_Code='4'
      <isNotEmpty prepend="AND" property="Empleado" >
         O.Added_By = #Empleado#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="NumTienda" >
         O.Location_Code = #NumTienda#
      </isNotEmpty>
      <isNotEmpty prepend="AND" property="UbicacionTienda" >
         T.Ubicacion = #UbicacionTienda#
    </isNotEmpty>
      GROUP BY O.Driver_ID, O.Location_Code, E.First_Name, E.Last_Name, T.Ubicacion, T.Nombre_tienda
      ORDER BY T.Ubicacion, T.Nombre_tienda
     </select>

  </statements>
</sqlMap>
