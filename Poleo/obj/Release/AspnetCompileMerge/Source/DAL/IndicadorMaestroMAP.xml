<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="LineItem"
xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >
  <alias>
    <typeAlias alias="IndicadorMaestro" type="Poleo.Objects.IndicadorMaestro" />
    <typeAlias alias="VentasFinderMaestro" type="Poleo.Objects.VentasFinder" />
  </alias>
  <statements>
    <select id="SelectIndicadorMaestro" parameterClass="VentasFinderMaestro" resultClass="IndicadorMaestro">
      DECLARE @VentasLastYear TABLE
      (
      Tienda            VARCHAR(50) ,
      Ventas            MONEY       ,
      Ordenes           INT         ,
      OrdenesReparto    INT         ,
      OrdenesMostrador  INT         ,
      VentasReparto     MONEY       ,
      VentasMostrador   MONEY
      )
      DECLARE @Ventas TABLE
      (
      Tienda            VARCHAR(50) ,
      Ventas            MONEY       ,
      Ordenes           INT         ,
      OrdenesReparto    INT         ,
      OrdenesMostrador  INT         ,
      VentasReparto     MONEY       ,
      VentasMostrador   MONEY       ,
      OrdenesMalas      MONEY       ,
      NumOrdenesMalas   INT         ,
      VentaOrdenesMalas MONEY
      )
      INSERT @Ventas
      SELECT
      Location_Code                                         AS	  Tienda
      ,   SUM(Net_Sales)									                  AS    Ventas
      ,   SUM(Order_Count)							                    AS    Ordenes
      ,   SUM(Delivery_Order_Count)							            AS    OrdenesReparto
      ,   SUM(Carryout_Order_Count)                         AS    OrdenesMostrador
      ,   SUM(Delivery_Sales)								                AS    VentasReparto
      ,   SUM(Carryout_Sales)					                      AS    VentasMostrador
      ,   SUM(Bad_Sales+Void_Sales)/SUM(Net_Sales)          AS    VentasMalas
      ,   SUM(Bad_Order_Count+Void_Order_Count)				      AS	  NumOrdenesMalas
      ,   SUM(Bad_Sales+Void_Sales)							            AS    VentaOrdenesMalas
      FROM KeysExtractsCorpVersion
      WHERE EndDate BETWEEN #DateIni# AND #DateEnd#
      GROUP BY Location_Code

      INSERT @VentasLastYear
      SELECT
      Location_Code													                        AS	Tienda
      , SUM(Net_Sales)												                        AS  Ventas
      , SUM(Total_Orders)												                      AS  Ordenes
      , SUM(Delivery_Company_Car_Count+ Delivery_Personal_Car_Count)	AS  OrdenesReparto
      , SUM(Carry_Out_Count)							                            AS  OrdenesMostrador
      , SUM(Delivery_Company_Car+Delivery_Personal_Car)				        AS  VentasReparto
      , SUM(Carry_Out)										                            AS  VentasMostrador
      FROM Daily_Summary
      WHERE System_Date BETWEEN #DateIniLastYear# and #DateEndLastYear#
      GROUP BY Location_Code

      DECLARE @Pizzas1 TABLE
      (
      Tienda  VARCHAR(50) ,
      Total   INT         ,
      Sarten  INT         ,
      Orilla  INT         ,
      PD4     INT         ,
      P14     INT
      )

      DECLARE @Pizzas2 TABLE
      (
      Tienda  VARCHAR(50)  ,
      M85     INT          ,
      P2X1    INT
      )

      DECLARE @Pizzas TABLE
      (
      Tienda  VARCHAR(50) ,
      Total   INT         ,
      Sarten  INT         ,
      Orilla  INT         ,
      PD4     INT         ,
      P14     INT         ,
      M85     INT         ,
      P2X1    INT

      )

      INSERT @Pizzas1
      SELECT
      Location_Code                                                                 AS Tienda   ,
      SUM(CASE WHEN Product_Size_Code LIKE 'D4'THEN Quantity/4 ELSE Quantity END)   AS TOTAL    ,
      SUM(CASE WHEN Product_Crust_Code LIKE 'SARTEN' THEN  Quantity ELSE 0 END )    AS SARTEN   ,
      SUM(CASE WHEN Product_Crust_Code LIKE 'ORILLA' THEN Quantity ELSE 0 END )     AS ORILLA   ,
      SUM(CASE WHEN Product_Size_Code LIKE 'D4' THEN Quantity/4 ELSE 0 END)			    AS PD4		  ,
      SUM(CASE WHEN Product_Size_Code LIKE '14%' THEN Quantity ELSE 0 END )			    AS P14
      FROM ProductsExtracts
      WHERE Product_Category_Code  LIKE 'PIZZA' AND  EndDate  BETWEEN #DateIni# AND #DateEnd#
      GROUP BY Location_Code
      ORDER BY Location_Code


      INSERT @Pizzas2
      SELECT
      Location_Code,
      SUM(CASE WHEN CouponCode LIKE 'M85%' THEN OrdCpnQty ELSE 0 END ) AS M85,
      SUM(CASE WHEN substring(CouponCode,3,2)= '21'then OrdCpnQty
      WHEN substring(CouponCode,4,2) =  '21'THEN OrdCpnQty
      WHEN CouponCode IN ('MG1','MG2')THEN OrdCpnQty ELSE 0 END) AS P2X1
      FROM OrderCoupons
      WHERE Order_Date BETWEEN #DateIni# AND #DateEnd#
      GROUP BY Location_Code
      ORDER BY Location_Code

      INSERT  @Pizzas
      SELECT
      p1.*,
      p2.M85,
      p2.P2X1
      FROM @Pizzas1 p1
      LEFT JOIN @Pizzas2  p2 ON p1.Tienda=p2.Tienda

      DECLARE @Adicionales TABLE
      (
      Tienda        VARCHAR(50)   ,
      Adicionales   INT           ,
      Canelazo      INT           ,
      Papotas       INT           ,
      Wings         INT           ,
      Fingers       INT           ,
      Volcan        INT           ,
      SweetBread    INT           ,
      Cheese        INT           ,
      REF120Z       INT           ,
      REF160Z       INT           ,
      REF220Z       INT           ,
      REF320Z       INT           ,
      REF500ML      INT           ,
      REF600ML      INT           ,
      REF2LTS       INT           ,
      REF25LTS      INT
      )
      INSERT @Adicionales
      SELECT
      Location_Code                                                                                     AS  Tienda      ,
      SUM(CASE WHEN Product_Code LIKE 'PKCNGT' THEN Quantity/2
      WHEN Product_Code LIKE 'PKCPAP' THEN Quantity/2
      WHEN Product_Code LIKE 'WINGSMED' THEN Quantity*2 ELSE Quantity END)                     AS  Adicionales ,
      SUM(CASE WHEN Product_Description LIKE '%CANELAZO%' THEN Quantity END)	                          AS  Canelazo    ,
      SUM(CASE WHEN Product_Code LIKE 'PAPOT' THEN Quantity
      WHEN Product_Code LIKE 'PKCPAP' THEN Quantity/2 END )                                    AS  Papotas     ,
      SUM(CASE WHEN Product_Code LIKE 'WINGS' THEN Quantity
      WHEN Product_Code LIKE 'WINGSMED' THEN Quantity*2
      WHEN Product_Code LIKE 'WINGS3CH' THEN Quantity END )                                    AS  Wings       ,
      SUM(CASE WHEN Product_Code LIKE 'PKCBOX' THEN Quantity
      WHEN Product_Code LIKE 'PKCNGT' THEN Quantity/2 END )                                    AS  Fingers     ,
      0                                                                                                 AS  Volcan      ,
      SUM(CASE WHEN Product_Code LIKE 'SWTMAIND' OR Product_Code LIKE 'SWEETMAN' THEN Quantity END)     AS  SweetBread  ,
      SUM(CASE WHEN Product_Code LIKE 'CHEESB'THEN Quantity END)                                        AS  Cheese      ,
      SUM(CASE WHEN Product_Size_Code LIKE '12OZ' THEN Quantity ELSE 0 END)                             AS  REF120Z     ,
      SUM(CASE WHEN Product_Size_Code LIKE '16OZ' THEN Quantity ELSE 0 END)                             AS  REF160Z     ,
      SUM(CASE WHEN Product_Size_Code LIKE '22OZ' THEN Quantity ELSE 0 END)                             AS  REF220Z     ,
      SUM(CASE WHEN Product_Size_Code LIKE '32OZ' THEN Quantity ELSE 0 END)                             AS  REF320Z     ,
      SUM(CASE WHEN Product_Size_Code LIKE '500ML' THEN Quantity ELSE 0 END)                            AS  REF500ML    ,
      SUM(CASE WHEN Product_Size_Code LIKE '600ML' THEN Quantity ELSE 0 END)                            AS  REF600ML    ,
      SUM(CASE WHEN Product_Size_Code LIKE '2LTS' THEN Quantity ELSE 0 END)                             AS  REF2LTS     ,
      SUM(CASE WHEN Product_Size_Code LIKE '25LTS' THEN Quantity ELSE 0 END)                            AS  REF25LTS
      FROM  ProductsExtracts
      WHERE  EndDate  BETWEEN #DateIni# AND #DateEnd#
      AND (Product_Category_Code  LIKE 'Wings' OR Product_Category_Code  LIKE 'Bread' OR Product_Category_Code  LIKE 'Drinks')
      GROUP BY Location_Code

      DECLARE @inventarioInicial  TABLE
      (
      tienda              VARCHAR(50),
      Inventario_Inicial  MONEY
      )

      DECLARE @inventarioFinal  TABLE
      (
      tienda              VARCHAR(50),
      Inventario_Final    MONEY
      )

      declare @factura table
      (
      tienda VARCHAR(50),
      factura MONEY
      )
      declare @UtilizadoReal Table
      (
      tienda VARCHAR(50),
      UtilizadoReal MONEY
      )

      INSERT @inventarioInicial
      SELECT
      inv2.Location_Code AS tienda,
      SUM(INV2.Count_Unit_Cost * INV2.Beginning_Qty) AS Inventario_Inicial
      FROM  DailyInventoryExtracts INV2
      WHERE  System_Date = #DateIni#
      GROUP BY Location_Code

      INSERT @inventarioFinal
      SELECT
      inv2.Location_Code AS tienda
      , SUM( INV2.Count_Unit_Cost * INV2.Ending_Qty) AS Inventario_Final
      FROM  DailyInventoryExtracts INV2
      WHERE  System_Date = #DateEnd#
      GROUP BY  Location_Code

      INSERT @factura
      SELECT
      Location_Code AS tienda
      , SUM(Amount+DeliveryCharge) AS factura
      FROM InventoryPurchasesExtracts
      WHERE  System_Date BETWEEN #DateIni# AND #DateEnd#
      GROUP BY Location_Code


      INSERT @UtilizadoReal
      SELECT  inv.tienda,
      ((CASE WHEN fac.factura IS null THEN 0 ELSE fac.factura END) +inv.Inventario_Inicial-inv2.Inventario_Final) AS  utilizado_real
      FROM @inventarioInicial inv
      LEFT JOIN @factura fac ON inv.tienda=fac.tienda
      LEFT JOIN @inventarioFinal inv2 ON inv.tienda=inv2.tienda
      DECLARE @tblGratis table
      (
      VentaOrdenesGratis MONEY DEFAULT 0,
      NumOrdenesGratis int DEFAULT 0,
      Tienda VARCHAR(50)
      )

      insert @tblGratis
      SELECT
      SUM(Cust_Amt) AS VentaOrdenesGratis,
      count(Cust_Amt) AS NumOrdenesGratis,
      ORD.Store_No AS Tienda
      FROM OrdersExtracts  ORD
      WHERE ord_dt BETWEEN #DateIni# AND #DateEnd# AND Ord_Status_Cd ='P'
      GROUP BY ORD.Store_No



      SELECT
      v.Tienda                ,
      VLY.Ventas              AS VentasLastYear,
      V.Ventas                AS Ventas,
      vly.Ordenes             AS OrdenesLastYear,
      V.Ordenes               AS Ordenes,
      VLY.OrdenesReparto      AS OrdRepartoLastYear ,
      VLY.OrdenesMostrador    AS OrdMostradorLastYear,
      v.OrdenesReparto        AS OrdReparto,
      v.OrdenesMostrador      AS OrdMostrador,
      v.VentasReparto         AS VentasReparto,
      v.VentasMostrador       AS VentaMostrador,
      vly.VentasReparto       AS VtsRepartoLastYear,
      vly.VentasMostrador     AS VtsMostradorLastYear,
      v.OrdenesMalas          AS OrdenesMalas ,
      P.Total                 AS PizzaTotal,
      P.Sarten                AS PizzaSarten,
      p.Orilla                AS PizzaOrilla,
      p.M85                   AS PizzaM85,
      A.Adicionales           AS TotalAdicionales,
      a.Canelazo              AS Canelazo,
      a.Papotas               AS Papotas,
      a.Wings                 AS Wings,
      a.Fingers               AS fingers,
      a.Volcan                ,
      a.SweetBread            ,
      a.Cheese                ,
      a.REF120Z               ,
      a.REF160Z               ,
      a.REF220Z               ,
      a.REF320Z               ,
      a.REF500ML              ,
      a.REF600ML              ,
      a.REF2LTS               ,
      a.REF25LTS              ,
      U.UtilizadoReal         ,
      U.UtilizadoReal/V.Ventas AS UtilizadoPor,
      V.NumOrdenesMalas,
      V.VentaOrdenesMalas,
      G.NumOrdenesGratis,
      G.VentaOrdenesGratis,
      P.PD4,
      P.P14,
      P.P2X1
      FROM  @Ventas AS V
      INNER JOIN  Tiendas T             ON T.Number_tienda= V.Tienda
      LEFT  JOIN  @VentasLastYear VLY   ON v.Tienda=vly.Tienda
      LEFT  JOIN  @Pizzas P             ON P.Tienda=V.Tienda
      LEFT  JOIN  @Adicionales A        ON A.Tienda=V.Tienda
      LEFT  JOIN  @UtilizadoReal U      ON U.tienda=V.Tienda
      left join   @tblGratis G on V.Tienda=G.Tienda
      ORDER BY    T.Ubicacion, T.Number_tienda
    </select>
    
  </statements>
  
</sqlMap>

