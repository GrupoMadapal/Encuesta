<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="LineItem"
xmlns="http://ibatis.apache.org/mapping"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >

  <alias>
    <typeAlias alias="DQ_Ranking" type="Poleo.Objects.DQ_Ranking"/>
    <!--<typeAlias alias="DQ_VentasFinder" type="Poleo.Objects.DQ_VentasFinder" />-->
  </alias>

  <statements>
    <select id="SelectSalesRanking" parameterClass="DQ_VentasFinder" resultClass="DQ_Ranking">
      /* <!--   SELECT
      CAST(SUM(TOTALBRUTO) AS DECIMAL(12,2)) AS RealSales,
      NOMBREALMACEN AS NameStore
      FROM ALBVENTACAB
      INNER JOIN ALMACEN ON SUBSTRING(ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND NUMSERIE NOT LIKE '%I'
      GROUP BY NOMBREALMACEN
      ORDER BY SUM(TOTALBRUTO) DESC   -->    */
		DECLARE @Ranking TABLE
		(
		RealSales DECIMAL(18,2),
		NameStore Varchar(20)
		)
		INSERT @Ranking

		SELECT
		CAST(SUM(TOTALBRUTO) AS DECIMAL(12,2)) AS RealSales,
		NOMBREALMACEN AS NameStore
		FROM [BD1].[dbo].ALBVENTACAB
		INNER JOIN ALMACEN ON SUBSTRING([BD1].[dbo].ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
		WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND NUMSERIE NOT LIKE '%I'
		GROUP BY NOMBREALMACEN
		UNION
		SELECT
		CAST(SUM(TOTALBRUTO) AS DECIMAL(12,2)) AS RealSales,
		NOMBREALMACEN AS NameStore
		FROM [DairyQueen].[dbo].ALBVENTACAB
		INNER JOIN ALMACEN ON SUBSTRING([DairyQueen].[dbo].ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
		WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND NUMSERIE NOT LIKE '%I'
		GROUP BY NOMBREALMACEN
		
		SELECT SUM(RealSales) AS RealSales, NameStore
		FROM @Ranking
		GROUP BY NameStore
		ORDER BY RealSales DESC
	</select>

    <select id="SelectCakeRanking" parameterClass="DQ_VentasFinder" resultClass="DQ_Ranking">
      <!-- DECLARE @PASTEL TABLE
      (
      CODARTICULO VARCHAR(50)
      )

      INSERT @PASTEL
      SELECT CODARTICULO FROM ARTICULOS
      WHERE DPTO ='1800' AND SECCION  in ('1801','1802','1803','1804') AND CODARTICULO NOT IN ('10707','10708')

      SELECT
      SUM(VD.UNIDADESTOTAL) AS TotalCake,
      CAST(SUM(VD.TOTAL) AS DECIMAL(12,2)) AS TotalSalesCake,
      ALMACEN.NOMBREALMACEN AS NameStore
      FROM ALBVENTACAB VC
	    INNER JOIN ALBVENTALIN VD ON VC.NUMSERIE = VD.NUMSERIE AND VC.NUMALBARAN = VD.NUMALBARAN
      INNER JOIN @PASTEL P ON P.CODARTICULO = VD.CODARTICULO
      INNER JOIN ALMACEN ON SUBSTRING(VC.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE VC.FECHA BETWEEN #FechaIni# AND #FechaEnd#
      GROUP BY ALMACEN.NOMBREALMACEN
      ORDER BY SUM(VD.UNIDADESTOTAL) DESC
      -->

      DECLARE @PASTEL TABLE
      (
      CODARTICULO VARCHAR(50)
      )
      DECLARE @PASTEL2 TABLE
      (
      CODARTICULO VARCHAR(50)
      )


      INSERT @PASTEL
      SELECT CODARTICULO FROM [BD1].[dbo].ARTICULOS
      WHERE DPTO ='1800' AND SECCION  in ('1801','1802','1803','1804') AND CODARTICULO NOT IN ('10707','10708')
   INSERT @PASTEL2
      SELECT CODARTICULO FROM [Dairyqueen].[dbo].ARTICULOS
      WHERE DPTO ='1100' AND SECCION  in ('1101','1102','1103','1104') AND CODARTICULO NOT IN ('10707','10708')

      DECLARE @CakeRanking TABLE
      (
      TotalCake INT,
      TotalSalesCake DECIMAL(12,2),
      NameStore VARCHAR(30)
      )

      INSERT @CakeRanking
      SELECT
      SUM(VD.UNIDADESTOTAL) AS TotalCake,
      CAST(SUM(VD.TOTAL) AS DECIMAL(12,2)) AS TotalSalesCake,
      ALMACEN.NOMBREALMACEN AS NameStore
      FROM [BD1].[dbo].ALBVENTACAB VC
      INNER JOIN [BD1].[dbo].ALBVENTALIN VD ON VC.NUMSERIE = VD.NUMSERIE AND VC.NUMALBARAN = VD.NUMALBARAN
      INNER JOIN @PASTEL P ON P.CODARTICULO = VD.CODARTICULO
      INNER JOIN [BD1].[dbo].ALMACEN ON SUBSTRING(VC.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE VC.FECHA BETWEEN #FechaIni# AND #FechaEnd#
      GROUP BY [BD1].[dbo].ALMACEN.NOMBREALMACEN
      UNION
      SELECT
      SUM(VD.UNIDADESTOTAL) AS TotalCake,
      CAST(SUM(VD.TOTAL) AS DECIMAL(12,2)) AS TotalSalesCake,
      ALMACEN.NOMBREALMACEN AS NameStore
      FROM [DairyQueen].[dbo].ALBVENTACAB VC
      INNER JOIN [DairyQueen].[dbo].ALBVENTALIN VD ON VC.NUMSERIE = VD.NUMSERIE AND VC.NUMALBARAN = VD.NUMALBARAN
      INNER JOIN @PASTEL2 P ON P.CODARTICULO = VD.CODARTICULO
      INNER JOIN [DairyQueen].[dbo].ALMACEN ON SUBSTRING(VC.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE VC.FECHA BETWEEN #FechaIni# AND #FechaEnd#
      GROUP BY [DairyQueen].[dbo].ALMACEN.NOMBREALMACEN
      ORDER BY TotalCake DESC

      SELECT NameStore, SUM(TotalCake) AS TotalCake, SUM(TotalSalesCake) AS TotalSalesCake
      FROM @CakeRanking
      GROUP BY NameStore
      ORDER BY TotalCake DESC
    </select>

    <select id="SelectExtraToppingRanking" parameterClass="DQ_VentasFinder" resultClass="DQ_Ranking">
		SELECT
		CAST(SUM(TOTALBRUTO) AS DECIMAL(12,2)) AS RealSales,
		NOMBREALMACEN AS NameStore,
		substring(ALBVENTACAB.NUMSERIE,1,2) as numserie
		into ##ranking
		FROM [DairyQueen].[dbo].ALBVENTACAB
		INNER JOIN ALMACEN ON SUBSTRING([DairyQueen].[dbo].ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
		WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd#  AND NUMSERIE NOT LIKE '%I'
		GROUP BY NOMBREALMACEN, substring(ALBVENTACAB.NUMSERIE,1,2)

		SELECT CODARTICULO
		into ##TOPPING
		FROM ARTICULOS
		WHERE DPTO ='1200'

		SELECT
		convert(numeric(10,4),(SUM(VD.TOTAL / RealSales))) AS ExtraTopping,
		SUM(VD.UNIDADESTOTAL) ExtraToppingPce,
		ALMACEN.NOMBREALMACEN AS NameStore
		FROM ALBVENTACAB VC
		INNER JOIN ALBVENTALIN VD ON VD.NUMSERIE = VC.NUMSERIE AND VD.NUMALBARAN = VC.NUMALBARAN
		INNER JOIN ALMACEN ON SUBSTRING(VD.NUMSERIE,1,2) = ALMACEN.CODALMACEN
		inner join ##Ranking R on SUBSTRING(VD.NUMSERIE,1,2)  = R.numserie
		WHERE VC.FECHA BETWEEN #FechaIni# AND #FechaEnd#  AND VD.CODARTICULO IN (SELECT * FROM ##TOPPING)
		GROUP BY ALMACEN.NOMBREALMACEN, RealSales
		ORDER BY ExtraToppingPce DESC


		drop table ##Ranking
		drop table ##TOPPING



	</select>

    <select id="SelectCosteRanking" parameterClass="DQ_VentasFinder" resultClass="DQ_Ranking">
      <!--SELECT
      CAST(SUM(TOTALCOSTE) AS DECIMAL(12,2)) AS Coste,
      CAST(SUM(TOTALCOSTE)/SUM(TOTALBRUTO) AS DECIMAL(12,4)) AS CostePor,
      ALMACEN.NOMBREALMACEN AS NameStore
      FROM ALBVENTACAB
      INNER JOIN ALMACEN ON SUBSTRING(ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND NUMSERIE NOT LIKE '%I'
      GROUP BY ALMACEN.NOMBREALMACEN
      ORDER BY SUM(TOTALCOSTE) DESC-->
    
      SELECT
      CAST(SUM(TOTALCOSTE) AS DECIMAL(12,2)) AS Coste,
	    CAST(SUM(TOTALBRUTO) AS DECIMAL(12,2)) AS Total,
	    SUBSTRING(ALBVENTACAB.NUMSERIE,1,2) AS ALMACEN
	    INTO ##COSTEVENTAS
      FROM ALBVENTACAB
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd#
	    GROUP BY SUBSTRING(ALBVENTACAB.NUMSERIE,1,2)
      ORDER BY SUM(TOTALCOSTE) DESC

	    SELECT 
	    CAST(SUM(PRECIO*UNIDADES) AS DECIMAL(12,2)) AS Coste,
	    CODALMACENORIGEN
	    INTO ##COSTEMERMAS
	    FROM MOVIMENTS WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND CODALMACENDESTINO LIKE '%M'
	    GROUP BY CODALMACENORIGEN

	    <!--ERROR DIVIDED BY ZERO (##COSTEVENTAS.Coste + ISNULL(##COSTEMERMAS.Coste, 0))/##COSTEVENTAS.Total AS CostePor, -->
      <!-- ORDER BY (##COSTEVENTAS.Coste + ISNULL(##COSTEMERMAS.Coste, 0))/##COSTEVENTAS.Total ASC -->
      SELECT
      ##COSTEVENTAS.Coste + ISNULL(##COSTEMERMAS.Coste, 0) AS Coste,
      (##COSTEVENTAS.Coste + ISNULL(##COSTEMERMAS.Coste, 0))/NULLIF(##COSTEVENTAS.Total, 0) AS CostePor,
      ALMACEN.NOMBREALMACEN AS NameStore
      FROM ##COSTEVENTAS
      LEFT JOIN ##COSTEMERMAS ON ##COSTEVENTAS.ALMACEN = ##COSTEMERMAS.CODALMACENORIGEN
      INNER JOIN ALMACEN ON ##COSTEVENTAS.ALMACEN = ALMACEN.CODALMACEN
      ORDER BY (##COSTEVENTAS.Coste + ISNULL(##COSTEMERMAS.Coste, 0))/NULLIF(##COSTEVENTAS.Total, 0) ASC
      

      DROP TABLE ##COSTEVENTAS
      DROP TABLE ##COSTEMERMAS
    </select>

    <select id="SelectOrdersRanking" parameterClass="DQ_VentasFinder" resultClass="DQ_Ranking">
      <!-- SELECT
      SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) AS Orders,
      ALMACEN.NOMBREALMACEN AS NameStore
      FROM ALBVENTACAB
      INNER JOIN ALMACEN ON SUBSTRING(ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND NUMSERIE NOT LIKE '%I'
      GROUP BY ALMACEN.NOMBREALMACEN
      ORDER BY SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) DESC  -->

      DECLARE @OrdersRanking TABLE
      (
      Orders INT,
      NameStore VARCHAR(30)
      )

      INSERT @OrdersRanking
      SELECT
      SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) AS Orders,
      ALMACEN.NOMBREALMACEN AS NameStore
      FROM [BD1].[dbo].ALBVENTACAB
      INNER JOIN [BD1].[dbo].ALMACEN ON SUBSTRING(ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND NUMSERIE NOT LIKE '%I'
      GROUP BY [BD1].[dbo].ALMACEN.NOMBREALMACEN
      UNION
      SELECT
      SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) AS Orders,
      ALMACEN.NOMBREALMACEN AS NameStore
      FROM [DairyQueen].[dbo].ALBVENTACAB
      INNER JOIN [DairyQueen].[dbo].ALMACEN ON SUBSTRING(ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND NUMSERIE NOT LIKE '%I'
      GROUP BY [DairyQueen].[dbo].ALMACEN.NOMBREALMACEN
      ORDER BY Orders DESC

      SELECT SUM(Orders) AS Orders, NameStore
      FROM @OrdersRanking GROUP BY NameStore
      ORDER BY Orders DESC

    </select>

    <select id="SelectSalesIncrease" parameterClass="DQ_VentasFinder" resultClass="DQ_Ranking">
      <!--SELECT
      CAST(SUM(TOTALBRUTO) AS DECIMAL(12,2)) AS RealSales,
      NOMBREALMACEN AS NameStore
      INTO ##VENTAS
      FROM ALBVENTACAB
      INNER JOIN ALMACEN ON SUBSTRING(ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND NUMSERIE NOT LIKE '%I'
      GROUP BY NOMBREALMACEN
      ORDER BY SUM(TOTALBRUTO) DESC

      SELECT
      CAST(SUM(TOTALBRUTO) AS DECIMAL(12,2)) AS RealSales,
      NOMBREALMACEN AS NameStore
      INTO ##VENTASLASTYEAR
      FROM ALBVENTACAB
      INNER JOIN ALMACEN ON SUBSTRING(ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #DateIniLastYear# AND #DateEndLastYear# AND NUMSERIE NOT LIKE '%I'
      GROUP BY NOMBREALMACEN
      ORDER BY SUM(TOTALBRUTO) DESC

      SELECT
      /*(##VENTAS.RealSales/##VENTASLASTYEAR.RealSales) - 1 AS IncreaseSales,*/
      CASE ##VENTASLASTYEAR.RealSales WHEN 0 THEN 0 ELSE (##VENTAS.RealSales/##VENTASLASTYEAR.RealSales) - 1 END AS IncreaseSales,
      ##VENTAS.NameStore
      FROM ##VENTAS
      LEFT JOIN ##VENTASLASTYEAR ON ##VENTASLASTYEAR.NameStore = ##VENTAS.NameStore
      /*ORDER BY ##VENTAS.RealSales/##VENTASLASTYEAR.RealSales DESC*/
      ORDER BY CASE ##VENTASLASTYEAR.RealSales WHEN 0 THEN 0 ELSE (##VENTAS.RealSales/##VENTASLASTYEAR.RealSales) END DESC

      DROP TABLE ##VENTAS
      DROP TABLE ##VENTASLASTYEAR
      -->

      <!--SELECT
      CAST(SUM(TOTALBRUTO) AS DECIMAL(12,2)) AS RealSales,
      NOMBREALMACEN AS NameStore
      INTO ##VENTAS
      FROM [BD1].[dbo].ALBVENTACAB
      INNER JOIN [BD1].[dbo].ALMACEN ON SUBSTRING([BD1].[dbo].ALBVENTACAB.NUMSERIE,1,2) = [BD1].[dbo].ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND NUMSERIE NOT LIKE '%I'
      GROUP BY [BD1].[dbo].ALMACEN.NOMBREALMACEN
      UNION-->
      SELECT
      CAST(SUM(TOTALBRUTO) AS DECIMAL(12,2)) AS RealSales,
      NOMBREALMACEN AS NameStore
      INTO ##VENTAS
      FROM [DairyQueen].[dbo].ALBVENTACAB
      INNER JOIN [DairyQueen].[dbo].ALMACEN ON SUBSTRING([DairyQueen].[dbo].ALBVENTACAB.NUMSERIE,1,2) = [DairyQueen].[dbo].ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND NUMSERIE NOT LIKE '%I'
      GROUP BY NOMBREALMACEN
      ORDER BY RealSales DESC


      /* Date's last year */
      SELECT
      CAST(SUM(TOTALBRUTO) AS DECIMAL(12,2)) AS RealSales,
      NOMBREALMACEN AS NameStore
      INTO ##VENTASLASTYEAR
      FROM [BD1].[dbo].ALBVENTACAB
      INNER JOIN [BD1].[dbo].ALMACEN ON SUBSTRING([BD1].[dbo].ALBVENTACAB.NUMSERIE,1,2) = [BD1].[dbo].ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #DateIniLastYear# AND #DateEndLastYear# AND NUMSERIE NOT LIKE '%I'
      GROUP BY [BD1].[dbo].ALMACEN.NOMBREALMACEN
      ORDER BY SUM(TOTALBRUTO) DESC

      SELECT
      ##VENTAS.NameStore,
      CASE ##VENTASLASTYEAR.RealSales WHEN 0 THEN 0 ELSE (##VENTAS.RealSales/##VENTASLASTYEAR.RealSales) - 1 END AS IncreaseSales
      FROM ##VENTAS
      INNER JOIN ##VENTASLASTYEAR ON ##VENTASLASTYEAR.NameStore = ##VENTAS.NameStore
      ORDER BY CASE ##VENTASLASTYEAR.RealSales WHEN 0 THEN 0 ELSE (##VENTAS.RealSales/##VENTASLASTYEAR.RealSales) END DESC

      DROP TABLE ##VENTAS
      DROP TABLE ##VENTASLASTYEAR

    </select>

    <select id="SelectOrdersIncrease" parameterClass="DQ_VentasFinder" resultClass="DQ_Ranking">
      <!-- SELECT
      SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) AS Orders,
      ALMACEN.NOMBREALMACEN AS NameStore
      INTO ##ORDERS
      FROM ALBVENTACAB
      INNER JOIN ALMACEN ON SUBSTRING(ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd#  AND NUMSERIE NOT LIKE '%I'
      GROUP BY ALMACEN.NOMBREALMACEN
      ORDER BY SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) DESC

      SELECT
      SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) AS Orders,
      ALMACEN.NOMBREALMACEN AS NameStore
      INTO ##ORDERSLASTYEAR
      FROM ALBVENTACAB
      INNER JOIN ALMACEN ON SUBSTRING(ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #DateIniLastYear# AND #DateEndLastYear# AND NUMSERIE NOT LIKE '%I'
      GROUP BY ALMACEN.NOMBREALMACEN
      ORDER BY SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) DESC

      SELECT
      CAST(##ORDERS.Orders AS DECIMAL(10,2))/CAST(##ORDERSLASTYEAR.Orders AS DECIMAL(10,2)) - 1 AS IncreaseOrder,
      ##ORDERS.NameStore
      FROM ##ORDERS
      LEFT JOIN ##ORDERSLASTYEAR ON ##ORDERSLASTYEAR.NameStore = ##ORDERS.NameStore
      ORDER BY CAST(##ORDERS.Orders AS DECIMAL(10,2))/CAST(##ORDERSLASTYEAR.Orders AS DECIMAL(10,2)) DESC

      DROP TABLE ##ORDERS
      DROP TABLE ##ORDERSLASTYEAR -->
      
      SELECT
      SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) AS Orders,
      [BD1].[dbo].ALMACEN.NOMBREALMACEN AS NameStore
      INTO ##ORDERS
      FROM [BD1].[dbo].ALBVENTACAB
      INNER JOIN [BD1].[dbo].ALMACEN ON SUBSTRING([BD1].[dbo].ALBVENTACAB.NUMSERIE,1,2) = [BD1].[dbo].ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd#  AND NUMSERIE NOT LIKE '%I'
      GROUP BY [BD1].[dbo].ALMACEN.NOMBREALMACEN
				    UNION
	    SELECT
      SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) AS Orders,
      [DairyQueen].[dbo].ALMACEN.NOMBREALMACEN AS NameStore
      FROM [DairyQueen].[dbo].ALBVENTACAB
      INNER JOIN [DairyQueen].[dbo].ALMACEN ON SUBSTRING([DairyQueen].[dbo].ALBVENTACAB.NUMSERIE,1,2) = [DairyQueen].[dbo].ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd#  AND NUMSERIE NOT LIKE '%I'
      GROUP BY [DairyQueen].[dbo].ALMACEN.NOMBREALMACEN
      ORDER BY Orders DESC
      

      SELECT
      SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) AS Orders,
      [BD1].[dbo].ALMACEN.NOMBREALMACEN AS NameStore
      INTO ##ORDERSLASTYEAR
      FROM [BD1].[dbo].ALBVENTACAB
      INNER JOIN [BD1].[dbo].ALMACEN ON SUBSTRING([BD1].[dbo].ALBVENTACAB.NUMSERIE,1,2) = [BD1].[dbo].ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #DateIniLastYear# AND #DateEndLastYear# AND NUMSERIE NOT LIKE '%I'
      GROUP BY [BD1].[dbo].ALMACEN.NOMBREALMACEN
      ORDER BY SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) DESC

      SELECT
      ##ORDERS.NameStore,
	    CAST(##ORDERS.Orders AS DECIMAL(10,2))/CAST(##ORDERSLASTYEAR.Orders AS DECIMAL(10,2)) - 1 AS IncreaseOrder      
      FROM ##ORDERS
      INNER JOIN ##ORDERSLASTYEAR ON ##ORDERSLASTYEAR.NameStore = ##ORDERS.NameStore
      ORDER BY CAST(##ORDERS.Orders AS DECIMAL(10,2))/CAST(##ORDERSLASTYEAR.Orders AS DECIMAL(10,2)) DESC

      DROP TABLE ##ORDERS
      DROP TABLE ##ORDERSLASTYEAR
    </select>

    <select id="SelectCakeIncrease" parameterClass="DQ_VentasFinder" resultClass="DQ_Ranking">
      <!--  @PASTEL TABLE
      (
      CODARTICULO VARCHAR(50)
      )

      INSERT @PASTEL
      SELECT CODARTICULO FROM ARTICULOS
      WHERE DPTO ='1800' AND SECCION  in ('1801','1802','1803','1804')

      SELECT
      SUM(V.UNIDADESTOTAL) AS TotalCake,
      ALMACEN.NOMBREALMACEN AS NameStore
      INTO ##CAKE
      FROM ALBVENTALIN V
      INNER JOIN @PASTEL P ON P.CODARTICULO = V.CODARTICULO
      INNER JOIN ALMACEN ON SUBSTRING(V.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE DATEADD(DD, 0, DATEDIFF(DD, 0, V.HORA)) BETWEEN #FechaIni# AND #FechaEnd#
      GROUP BY ALMACEN.NOMBREALMACEN
      ORDER BY SUM(V.UNIDADESTOTAL) DESC

      SELECT
      SUM(V.UNIDADESTOTAL) AS TotalCake,
      ALMACEN.NOMBREALMACEN AS NameStore
      INTO ##CAKELASTYEAR
      FROM ALBVENTALIN V
      INNER JOIN @PASTEL P ON P.CODARTICULO = V.CODARTICULO
      INNER JOIN ALMACEN ON SUBSTRING(V.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE DATEADD(DD, 0, DATEDIFF(DD, 0, V.HORA)) BETWEEN #DateIniLastYear# AND #DateEndLastYear#
      GROUP BY ALMACEN.NOMBREALMACEN
      ORDER BY SUM(V.UNIDADESTOTAL) DESC

      SELECT	    
      CAST(##CAKE.TotalCake AS DECIMAL(10,2))/CAST(NULLIF(##CAKELASTYEAR.TotalCake, 0) AS DECIMAL(10,2)) - 1 AS IncreaseCake,
      ##CAKE.NameStore
      FROM ##CAKE
      LEFT JOIN ##CAKELASTYEAR ON ##CAKELASTYEAR.NameStore = ##CAKE.NameStore
      ORDER BY ##CAKE.TotalCake/NULLIF(##CAKELASTYEAR.TotalCake, 0) DESC
      

      DROP TABLE ##CAKE
      DROP TABLE ##CAKELASTYEAR -->
    
      DECLARE @PASTEL TABLE
      (
      CODARTICULO VARCHAR(50)
      )

      INSERT @PASTEL
      SELECT CODARTICULO FROM [BD1].[dbo].ARTICULOS
      WHERE DPTO ='1800' AND SECCION  in ('1801','1802','1803','1804') AND CODARTICULO NOT IN ('10707','10708')
				UNION
	  SELECT CODARTICULO FROM [Dairyqueen].[dbo].ARTICULOS
      WHERE DPTO ='1100' AND SECCION  in ('1101','1102','1103','1104') AND CODARTICULO NOT IN ('10707','10708')

      SELECT
      SUM(V.UNIDADESTOTAL) AS TotalCake,
      ALMACEN.NOMBREALMACEN AS NameStore
      INTO ##CAKE
      FROM [BD1].[dbo].ALBVENTALIN V
      INNER JOIN @PASTEL P ON P.CODARTICULO = V.CODARTICULO
      INNER JOIN [BD1].[dbo].ALMACEN ON SUBSTRING(V.NUMSERIE,1,2) = [BD1].[dbo].ALMACEN.CODALMACEN
      WHERE DATEADD(DD, 0, DATEDIFF(DD, 0, V.HORA)) BETWEEN #FechaIni# AND #FechaEnd#
      GROUP BY [BD1].[dbo].ALMACEN.NOMBREALMACEN
			        UNION
	    SELECT
      SUM(V.UNIDADESTOTAL) AS TotalCake,
      [Dairyqueen].[dbo].ALMACEN.NOMBREALMACEN AS NameStore
      FROM [Dairyqueen].[dbo].ALBVENTALIN V
      INNER JOIN @PASTEL P ON P.CODARTICULO = V.CODARTICULO
      INNER JOIN [Dairyqueen].[dbo].ALMACEN ON SUBSTRING(V.NUMSERIE,1,2) = [Dairyqueen].[dbo].ALMACEN.CODALMACEN
      WHERE DATEADD(DD, 0, DATEDIFF(DD, 0, V.HORA)) BETWEEN #FechaIni# AND #FechaEnd#
      GROUP BY [Dairyqueen].[dbo].ALMACEN.NOMBREALMACEN
      ORDER BY TotalCake DESC


      SELECT
      SUM(V.UNIDADESTOTAL) AS TotalCake,
      [BD1].[dbo].ALMACEN.NOMBREALMACEN AS NameStore
      INTO ##CAKELASTYEAR
      FROM [BD1].[dbo].ALBVENTALIN V
      INNER JOIN @PASTEL P ON P.CODARTICULO = V.CODARTICULO
      INNER JOIN [BD1].[dbo].ALMACEN ON SUBSTRING(V.NUMSERIE,1,2) = [BD1].[dbo].ALMACEN.CODALMACEN
      WHERE DATEADD(DD, 0, DATEDIFF(DD, 0, V.HORA)) BETWEEN #DateIniLastYear# AND #DateEndLastYear#
      GROUP BY [BD1].[dbo].ALMACEN.NOMBREALMACEN
      ORDER BY SUM(V.UNIDADESTOTAL) DESC

      
	    SELECT
      ##CAKE.NameStore,
      CAST(##CAKE.TotalCake AS DECIMAL(10,2))/CAST(NULLIF(##CAKELASTYEAR.TotalCake, 0) AS DECIMAL(10,2)) - 1 AS IncreaseCake
      FROM ##CAKE
      INNER JOIN ##CAKELASTYEAR ON ##CAKELASTYEAR.NameStore = ##CAKE.NameStore
      ORDER BY ##CAKE.TotalCake/NULLIF(##CAKELASTYEAR.TotalCake, 0) DESC
      

      DROP TABLE ##CAKE
      DROP TABLE ##CAKELASTYEAR
    </select>

    <select id="SelectTicketProm" parameterClass="DQ_VentasFinder" resultClass="DQ_Ranking">
      SELECT
      CAST(SUM(TOTALBRUTO) AS DECIMAL(12,2)) AS RealSales,
      NOMBREALMACEN AS NameStore
	    INTO ##SALES
      FROM ALBVENTACAB
      INNER JOIN ALMACEN ON SUBSTRING(ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND NUMSERIE NOT LIKE '%I'
      GROUP BY NOMBREALMACEN

	    SELECT
      SUM( CASE WHEN TOTALNETO > 0 THEN 1
      WHEN TOTALNETO = 0 then -1 ELSE -2 END) AS Orders,
      ALMACEN.NOMBREALMACEN AS NameStore
	    INTO ##ORDENES
      FROM ALBVENTACAB
      INNER JOIN ALMACEN ON SUBSTRING(ALBVENTACAB.NUMSERIE,1,2) = ALMACEN.CODALMACEN
      WHERE FECHA BETWEEN #FechaIni# AND #FechaEnd# AND NUMSERIE NOT LIKE '%I'
      GROUP BY ALMACEN.NOMBREALMACEN

	    SELECT
	    ##SALES.RealSales/##ORDENES.Orders AS TicketPromedio,
	    ##SALES.NameStore
	    FROM ##SALES
	    INNER JOIN ##ORDENES ON ##ORDENES.NameStore = ##SALES.NameStore
      WHERE ##ORDENES.Orders > 0
	    ORDER BY ##SALES.RealSales/##ORDENES.Orders DESC

	    DROP TABLE ##SALES
	    DROP TABLE ##ORDENES
    </select>
  </statements>
  
</sqlMap>